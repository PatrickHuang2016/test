@model WebApplication2.Models.UserInfo
@{
    ViewBag.Title = "Index";
}

<div class="row justify-content-md-center">
    <div class="col-md-5">
        @using (Html.BeginForm("Index", "Register", FormMethod.Post))
        {
            //@Html.ValidationSummary()
            @Html.AntiForgeryToken()

            <div class="card">
                <div class="card-header">
                    <div class="card-title">User Register</div>
                </div>
                <div class="card-body">
                    <div class="form-group">
                        @Html.LabelFor(m => m.FirstName)
                        @Html.TextBoxFor(m => m.FirstName, "", new { @class = "form-control", @placeholder = "First Name" })
                        @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "badge badge-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.LastName)
                        @Html.TextBoxFor(m => m.LastName, "", new { @class = "form-control", @placeholder = "Last Name" })
                        @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "badge badge-danger" })

                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Email)
                        @Html.TextBoxFor(m => m.Email, "", new { @class = "form-control", @placeholder = "Email" })
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "badge badge-danger" })
                        @if (ViewBag.error != null)
                        {
                            <span class="badge badge-danger">@Html.Raw(@ViewBag.error)</span>
                        }
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.PassWord)
                        @Html.PasswordFor(m => m.PassWord, new { @class = "form-control", @placeholder = "Password", Title = "At least 7 characters long, Upper-case letter, 1 Lower case letter" })
                        @Html.ValidationMessageFor(m => m.PassWord, "", new { @class = "badge badge-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.ConfirmPassword)
                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", @placeholder = "Confim Password" })
                        @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "badge badge-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.PhoneNumber)
                        @Html.TextBoxFor(m => m.PhoneNumber, "", new { @class = "form-control", @placeholder = "Phone Number" })
                        @Html.ValidationMessageFor(m => m.PhoneNumber, "", new { @class = "badge badge-danger" })                      
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.SecurityQuestion)
                        @{
                            List<SelectListItem> listItems = new List<SelectListItem>();
                            listItems.Add(new SelectListItem
                            {
                                Text = "What street did you live on in 6th grade?",
                                Value = "1"
                            });
                            listItems.Add(new SelectListItem
                            {
                                Text = "What was your childhood nickname?",
                                Value = "2",
                                Selected = true
                            });
                            listItems.Add(new SelectListItem
                            {
                                Text = "In what city did your mother and father meet?",
                                Value = "3"
                            });
                            listItems.Add(new SelectListItem
                            {
                                Text = "What was the last name of your third grade teacher?",
                                Value = "4"
                            });
                            listItems.Add(new SelectListItem
                            {
                                Text = "What was the name of your first stuffed animal?",
                                Value = "5"
                            });
                        }
                        @Html.DropDownListFor(model => model.SecurityQuestion, listItems, "-- Select Question --", new { @class = "form-control" })
                        
                        @Html.ValidationMessageFor(m => m.SecurityQuestion, "", new { @class = "badge badge-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.SecurityAnswer)
                        @Html.TextBoxFor(m => m.SecurityAnswer, "", new { @class = "form-control", @placeholder = "Security Answer" })
                        @Html.ValidationMessageFor(m => m.SecurityAnswer, "", new { @class = "badge badge-danger" })
                    </div>
                    <div class="form-group">                       
                        @Html.CheckBoxFor(m => m.Enroll,true)  
                        <label style="font-size:10px">Yes, I would like to be enrolled in the Sweepstakes. <a href="@Url.Action("Index", "Rules")" class="elements"><span>See Sweepstakes rules</span></a>
                        </label>
                        @Html.ValidationMessageFor(m => m.Enroll, "", new { @class = "badge badge-danger" })
                    </div>
                    <div class="form-group">                        
                        @Html.CheckBoxFor(m => m.RecievePromotion, true)
                        <label style="font-size:10px">
                            Yes, I would like to receive emails about special promotions or sales. 
                        </label>
                        @Html.ValidationMessageFor(m => m.RecievePromotion, "", new { @class = "badge badge-danger" })
                    </div>
                    <div class="form-group">
                        <input type="submit" name="submit" class="btn btn-primary" value="Submit" />
                        <br />
                        <p style="font-size:10px">By clicking this buttion, I agree to the </p>
                        <p style="font-size:10px"><a class="elements"><span>Terms of Use</span></a> and <a class="elements"><span>Privacy Policy</span></a></p>
                    </div>
                </div>
            </div>

        }
    </div>
</div>
